/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package parcialdiseño;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Clara Elizabeth
 */
public class CrudParcial extends javax.swing.JFrame {
    
    private boolean changes;
    public void actualizarTabla(){
        try{
            DefaultTableModel modelo = new  DefaultTableModel();
            JTableMascotas.setModel(modelo);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            ConexionDB conn = new ConexionDB();
            Connection con = conn.getConexion();
            
            String sql = "SELECT * FROM mascota";                    
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            
            int cantidadColumnas = rsMd.getColumnCount();
            
            modelo.addColumn("Chip");
            modelo.addColumn("Nombre");
            modelo.addColumn("Edad");
            modelo.addColumn("Especie");
            modelo.addColumn("Raza");
            modelo.addColumn("Tamaño");
            modelo.addColumn("Genero");

            int anchos[] = {120, 50, 50, 50 , 50};
            for (int i = 0; i < JTableMascotas.getColumnCount(); i++) {
                JTableMascotas.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);                
            }
            
            while(rs.next()){
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                modelo.addRow(filas);
            }
            
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }
    private void limpiarCampos() {
        JTxtChip.setText("");
        JTxtNombre.setText("");
        JTxtEdad.setText("");
        JTxtEspecie.setText("");
        JTxtRaza.setText(" ");
        JTxtTamano.setText(" ");
        JTxtGenero.setText(" ");
        
        
    }

    /**
     * Creates new form CrudParcial
     */
    public CrudParcial() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableMascotas = new javax.swing.JTable();
        JTxtBuscarChip = new javax.swing.JTextField();
        JBtnBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        JTxtChip = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        JTxtNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        JTxtEdad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        JTxtEspecie = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        JTxtRaza = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        JTxtTamano = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        JTxtGenero = new javax.swing.JTextField();
        JBtnGuardar = new javax.swing.JButton();
        JBtnActualizar = new javax.swing.JButton();
        JBtnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Bienvenido al registro de mascotas!");

        JTableMascotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(JTableMascotas);

        JBtnBuscar.setText("Buscar");
        JBtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnBuscarActionPerformed(evt);
            }
        });

        jLabel2.setText("Chip:");

        jLabel3.setText("Chip:");

        jLabel4.setText("Nombre");

        jLabel5.setText("Edad");

        jLabel6.setText("Especie");

        jLabel7.setText("Raza");

        jLabel8.setText("Tamaño");

        jLabel9.setText("Genero");

        JBtnGuardar.setText("Guardar");
        JBtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnGuardarActionPerformed(evt);
            }
        });

        JBtnActualizar.setText("Actualizar");
        JBtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnActualizarActionPerformed(evt);
            }
        });

        JBtnEliminar.setText("Eliminar");
        JBtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(JTxtBuscarChip))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addComponent(JBtnBuscar)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel5))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(JTxtChip)
                                        .addComponent(JTxtNombre)
                                        .addComponent(JTxtEdad, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(JTxtEspecie, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                                        .addComponent(JTxtRaza)
                                        .addComponent(JTxtTamano)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(18, 18, 18)
                                    .addComponent(JTxtGenero)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(JBtnGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JBtnActualizar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(JBtnEliminar)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTxtBuscarChip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(JBtnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JTxtChip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(JTxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(JTxtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(JTxtEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(JTxtRaza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(JTxtTamano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(JTxtGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JBtnGuardar)
                            .addComponent(JBtnActualizar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JBtnEliminar)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnGuardarActionPerformed
        // TODO add your handling code here:
        if(JTxtChip.getText().isEmpty() || JTxtNombre.getText().isEmpty() || JTxtEdad.getText().isEmpty() || JTxtEspecie.getText().isEmpty() || JTxtRaza.getText().isEmpty() || JTxtTamano.getText().isEmpty() || JTxtGenero.getText().isEmpty()){
            
        }

        DefaultTableModel modelo = new DefaultTableModel();

        JTableMascotas.setModel(modelo);

        PreparedStatement ps = null;

        try {
            ConexionDB objCon = new ConexionDB();
            Connection conn = objCon.getConexion();
            ps = conn.prepareStatement("INSERT INTO `mascota`(`Chip`, `Nombre`, `Edad`, `Especie`, `Raza`,`Tamaño`, `Genero` ) VALUES (?,?,?,?,?,?,?)");
            ps.setString(1, JTxtChip.getText());
            ps.setString(2, JTxtNombre.getText());
            ps.setString(3, JTxtEdad.getText());
            ps.setString(4, JTxtEspecie.getText());
            ps.setString(5, JTxtRaza.getText());
            ps.setString(6, JTxtTamano.getText());
            ps.setString(7, JTxtGenero.getText());

            int res = ps.executeUpdate();

            if (res > 0) {
                JOptionPane.showMessageDialog(null, "Mascota Registrada");
                Object[] fila = new Object[7];
                fila[0] = JTxtChip.getText();
                fila[1] = JTxtNombre.getText();
                fila[2] = JTxtEdad.getText();
                fila[3] = JTxtEspecie.getText();
                fila[4] = JTxtRaza.getText();
                fila[5] = JTxtTamano.getText();
                fila[6] = JTxtGenero.getText();
                modelo.addRow(fila);
                limpiarCampos();
                actualizarTabla();
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al registrar Mascota");
            System.out.println(ex);
        }

    }//GEN-LAST:event_JBtnGuardarActionPerformed

    private void JBtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnBuscarActionPerformed
        // TODO add your handling code here:
        String campo = JTxtBuscarChip.getText();
        String where = "";
        if (!"".equals(campo)) {

            where = "WHERE chip = " + campo + "";
        }

        try {
            DefaultTableModel modelo = new DefaultTableModel();

            JTableMascotas.setModel(modelo);

            PreparedStatement ps = null;
            ResultSet rs = null;

            ConexionDB conn = new ConexionDB();

            Connection con = conn.getConexion();

            String sql = "SELECT * FROM mascota " + where;
            System.out.println(sql);

            ps = con.prepareStatement(sql);

            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();

            int cantidadColumnas = rsMd.getColumnCount();

            modelo.addColumn("Chip");
            modelo.addColumn("Nombre");
            modelo.addColumn("Edad");
            modelo.addColumn("Especie");
            modelo.addColumn("Raza");
            modelo.addColumn("Tamaño");
            modelo.addColumn("Genero");

            int[] anchos = {120, 50, 50, 50};
            for (int i = 0; i < JTableMascotas.getColumnCount(); i++) {
                JTableMascotas.getColumnModel().getColumn(i).setPreferredWidth(anchos[1]);
            }

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {

                    filas[i] = rs.getObject(i + 1);
                }

                modelo.addRow(filas);
            }

        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_JBtnBuscarActionPerformed

    private void JBtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnEliminarActionPerformed
        // TODO add your handling code here:
         try {
            DefaultTableModel modelo = new DefaultTableModel();

            JTableMascotas.setModel(modelo);

            PreparedStatement ps = null;
            ResultSet rs = null;

            ConexionDB conn = new ConexionDB();

            Connection con = conn.getConexion();

            String mensaje = JOptionPane.showInputDialog("Ingrese el chip de la mascota a eliminar");
            if(mensaje == null){
                JOptionPane.showMessageDialog(null, "Ingrese un numero de chip valido");
            }

            String sql = "DELETE FROM `mascota` WHERE Chip = '" + mensaje + "'";
            System.out.println(sql);

            ps = con.prepareStatement(sql);

            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();

            JOptionPane.showMessageDialog(null, "Mascota eliminado");
            int cantidadColumnas = rsMd.getColumnCount();

            modelo.addColumn("Codigo");
            modelo.addColumn("Nombre");
            modelo.addColumn("Edad");
            modelo.addColumn("Especie");
            modelo.addColumn("Raza");
            modelo.addColumn("Tamaño");
            modelo.addColumn("Genero");

            int[] anchos = {120, 50, 50, 50};
            for (int i = 0; i < JTableMascotas.getColumnCount(); i++) {
                JTableMascotas.getColumnModel().getColumn(i).setPreferredWidth(anchos[1]);
            }

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {

                    filas[i] = rs.getObject(i + 1);
                }

                modelo.addRow(filas);
                actualizarTabla();
            }

        } catch (SQLException ex) {
        }

    }//GEN-LAST:event_JBtnEliminarActionPerformed

    private void JBtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnActualizarActionPerformed
        // TODO add your handling code here:
        if(JTxtChip.getText().isEmpty() || JTxtNombre.getText().isEmpty() || JTxtEdad.getText().isEmpty() || JTxtEspecie.getText().isEmpty() || JTxtRaza.getText().isEmpty() || JTxtTamano.getText().isEmpty() || JTxtGenero.getText().isEmpty()){
            
        }

        DefaultTableModel modelo = new DefaultTableModel();

        JTableMascotas.setModel(modelo);

        PreparedStatement ps = null;

        try {
            ConexionDB objCon = new ConexionDB();
            Connection conn = objCon.getConexion();
            ps = conn.prepareStatement("UPDATE `mascota` SET `chip`=?,`nombre`=?,`edad`=?,`especie`=?,`raza`=?,`tamaño`=?,`genero` =? WHERE chip=?");
            ps.setString(1, JTxtChip.getText());
            ps.setString(2, JTxtNombre.getText());
            ps.setString(3, JTxtEdad.getText());
            ps.setString(4, JTxtEspecie.getText());
            ps.setString(5, JTxtRaza.getText());
            ps.setString(6, JTxtTamano.getText());
            ps.setString(7, JTxtGenero.getText());
            ps.setString(8, JTxtChip.getText());

            int res = ps.executeUpdate();

            if (res > 0) {
                JOptionPane.showMessageDialog(null, "Mascota actualizada");
                Object[] fila = new Object[7];
                fila[0] = JTxtChip.getText();
                fila[1] = JTxtNombre.getText();
                fila[2] = JTxtEdad.getText();
                fila[3] = JTxtEspecie.getText();
                fila[4] = JTxtRaza.getText();
                fila[5] = JTxtTamano.getText();
                fila[6] = JTxtGenero.getText();
                modelo.addRow(fila);
                limpiarCampos();
                actualizarTabla();
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al actualizar Mascota");
            System.out.println(ex);
        }

    }//GEN-LAST:event_JBtnActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrudParcial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrudParcial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrudParcial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrudParcial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrudParcial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBtnActualizar;
    private javax.swing.JButton JBtnBuscar;
    private javax.swing.JButton JBtnEliminar;
    private javax.swing.JButton JBtnGuardar;
    private javax.swing.JTable JTableMascotas;
    private javax.swing.JTextField JTxtBuscarChip;
    private javax.swing.JTextField JTxtChip;
    private javax.swing.JTextField JTxtEdad;
    private javax.swing.JTextField JTxtEspecie;
    private javax.swing.JTextField JTxtGenero;
    private javax.swing.JTextField JTxtNombre;
    private javax.swing.JTextField JTxtRaza;
    private javax.swing.JTextField JTxtTamano;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
